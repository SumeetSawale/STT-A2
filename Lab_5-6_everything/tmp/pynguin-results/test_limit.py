# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import limit as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    tuple_0 = ()
    var_0 = module_0.limit(tuple_0)
    var_1 = module_0.limit(tuple_0, max_lim=tuple_0)
    var_2 = module_0.limit(var_1)
    int_0 = 1945
    var_3 = module_0.limit(var_0)
    set_0 = {int_0, int_0}
    var_4 = module_0.limit(set_0)
    tuple_1 = (tuple_0, int_0, int_0, set_0)
    module_0.limit(tuple_1)


def test_case_1():
    bytes_0 = b"~\rp\xadq\x7f\x9d\x05\xfe\xab\x15\x08[\xa4\x8c\xb7\xab"
    none_type_0 = None
    var_0 = module_0.limit(bytes_0, max_lim=none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "~y#'=n$Un2IU1F6^"
    none_type_0 = None
    var_0 = module_0.limit(str_0, str_0, none_type_0)
    none_type_1 = None
    module_0.limit(none_type_1)


@pytest.mark.xfail(strict=True)
def test_case_3():
    object_0 = module_1.object()
    module_0.limit(object_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    tuple_0 = ()
    var_0 = module_0.limit(tuple_0)
    none_type_0 = None
    var_1 = module_0.limit(var_0, max_lim=none_type_0)
    var_2 = module_0.limit(tuple_0, max_lim=var_0)
    str_0 = "3>|/Tf&F>n]*{"
    var_3 = module_0.limit(str_0)
    var_4 = module_0.limit(tuple_0, max_lim=var_0)
    module_0.limit(var_3, var_4, var_4)
